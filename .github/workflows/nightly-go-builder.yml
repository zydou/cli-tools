---
name: go nightly
run-name: ${{github.workflow}}

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - .github/workflows/nightly-go-builder.yml
  schedule:
    - cron: 45 23 * * *

permissions: write-all
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  filter:
    strategy:
      fail-fast: false
      matrix:
        name: [cheat, cointop]
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - uses: actions/checkout@main
        with:
          ref: manifest
          path: manifest

      - name: get build info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NAME: ${{matrix.name}}
        id: meta
        run: |
          KEY_NAME="${NAME//-/_}"  # replace - with _
          UPSTREAM=$(jq -r ".$KEY_NAME.upstream" build.json)
          REMOTE_REF=$(git ls-remote "https://github.com/$UPSTREAM.git" HEAD | awk '{ print $1}')
          OLD_REF=$(jq -r ".$KEY_NAME" manifest/manifest.json)
          if [ "$REMOTE_REF" != "$OLD_REF" ]; then
          echo "trigger=true" >> "$GITHUB_OUTPUT"
          else
          echo "trigger=false" >> "$GITHUB_OUTPUT"
          fi
          LDFLAGS=$(jq -r ".$KEY_NAME.ldflags" build.json)
          GOVERSION=$(jq -r ".$KEY_NAME.goversion" build.json)
          BIN=$(jq -r ".$KEY_NAME.bin" build.json)
          echo "remote_ref=$REMOTE_REF" >> "$GITHUB_OUTPUT"
          echo "short_ref=${REMOTE_REF:0:7}" >> "$GITHUB_OUTPUT"
          echo "upstream=$UPSTREAM" >> $GITHUB_OUTPUT
          echo "ldflags=$LDFLAGS" >> $GITHUB_OUTPUT
          echo "goversion=$GOVERSION" >> $GITHUB_OUTPUT
          echo "bin=$BIN" >> $GITHUB_OUTPUT

      - name: checkout upstream
        if: steps.meta.outputs.trigger == 'true'
        uses: actions/checkout@main
        with:
          repository: ${{ steps.meta.outputs.upstream }}
          path: upstream
          fetch-depth: 0
          fetch-tags: true

      - name: Set up Go
        if: steps.meta.outputs.trigger == 'true'
        uses: actions/setup-go@main
        with:
          go-version: '${{ steps.meta.outputs.goversion }}'
          cache-dependency-path: upstream/go.sum

      - uses: goreleaser/goreleaser-action@master
        if: steps.meta.outputs.trigger == 'true'
        with:
          install-only: true

      - name: build ${{ matrix.name }}
        if: steps.meta.outputs.trigger == 'true'
        id: build
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          NAME: ${{ matrix.name }}
        run: |
          bash go-builder.sh

      - uses: ncipollo/release-action@main
        if: steps.meta.outputs.trigger == 'true'
        with:
          allowUpdates: true
          prerelease: true
          artifacts: upstream/dist/*.tar.xz
          body: Nightly build ${{matrix.name}} based on https://github.com/${{ steps.meta.outputs.upstream }}/tree/${{ steps.meta.outputs.remote_ref }}
          commit: ${{ github.sha }}
          name: ${{matrix.name}}-${{ steps.meta.outputs.short_ref }}
          tag: ${{matrix.name}}-${{ steps.meta.outputs.short_ref }}
          replacesArtifacts: true

      - uses: ncipollo/release-action@main
        if: steps.meta.outputs.trigger == 'true'
        with:
          allowUpdates: true
          prerelease: true
          artifacts: upstream/dist/*.tar.xz
          body: Nightly build ${{matrix.name}} based on https://github.com/${{ steps.meta.outputs.upstream }}/tree/${{ steps.meta.outputs.remote_ref }}
          commit: ${{ github.sha }}
          name: ${{matrix.name}}
          tag: ${{matrix.name}}
          replacesArtifacts: true

      # checkout manifest self again, because the previous manifest maybe freshed by other builds
      - uses: actions/checkout@main
        if: steps.meta.outputs.trigger == 'true'
        with:
          ref: manifest
          path: manifest-new
      - name: update manifest
        if: steps.meta.outputs.trigger == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          NAME: ${{ matrix.name }}
          REMOTE_REF: ${{ steps.meta.outputs.remote_ref }}
        run: |
          KEY_NAME="${NAME//-/_}"  # replace - with _
          cd manifest-new
          jq ".$KEY_NAME = \"${{ steps.meta.outputs.remote_ref }}\"" manifest.json > temp.json && mv -fv temp.json manifest.json
          cat manifest.json
          git config --global user.name zydou
          git config --global user.email 23291546+zydou@users.noreply.github.com
          git config pull.rebase false
          git add manifest.json
          git commit -m "chore: update $NAME to ${REMOTE_REF:0:7}" || export NO_UPDATES=true
          if [ "$NO_UPDATES" != "true" ]; then
          echo "push to manifest"
          git push --force
          fi
