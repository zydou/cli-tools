---
name: nightly-tree-sitter
run-name: ${{github.workflow}}
env:
  name: tree-sitter
  upstream: tree-sitter/tree-sitter

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/nightly-tree-sitter.yml
  schedule:
    - cron: 45 23 * * *

permissions: write-all
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      action: ${{ steps.trigger-check.outputs.action }}
      remote_ref: ${{ steps.meta.outputs.remote_ref }}
    steps:
      - uses: actions/checkout@main
      - name: create manifest branch if not exist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh api /repos/${{github.repository}}/branches/manifest > /dev/null 2>&1; then
          git config --global user.email 23291546+zydou@users.noreply.github.com
          git config --global user.name ${{github.actor}}
          git checkout --orphan manifest
          git rm -rf .
          echo "{}" > manifest.json
          git add manifest.json
          git commit --allow-empty -m "chore: create manifest"
          git push origin manifest
          fi
      - name: set meta info
        id: meta
        run: |
          echo "remote_ref=$(git ls-remote https://github.com/${{env.upstream}}.git HEAD | awk '{ print $1}')" >> $GITHUB_OUTPUT
      - uses: actions/checkout@main
        with:
          ref: manifest
          path: manifest
      - name: check if we need to trigger a build
        id: trigger-check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          remote_ref: ${{ steps.meta.outputs.remote_ref }}
        run: |
          old_ref=$(cat manifest/manifest.json | jq -r '.tree_sitter')
          if [ "$old_ref" != "$remote_ref" ]; then
          echo "action=trigger" >> "$GITHUB_OUTPUT"
          else
          echo "action=skip" >> "$GITHUB_OUTPUT"
          fi

  build:
    needs: filter
    if: needs.filter.outputs.action == 'trigger'
    strategy:
      fail-fast: false
      matrix:
        include:
          - {target: aarch64-unknown-linux-gnu, os: ubuntu-latest, cross: true}
          - {target: aarch64-unknown-linux-musl, os: ubuntu-latest, cross: true}
          - {target: aarch64-apple-darwin, os: macos-latest, cross: false}
          - {target: x86_64-unknown-linux-gnu, os: ubuntu-latest, cross: true}
          - {target: x86_64-unknown-linux-musl, os: ubuntu-latest, cross: true}
          - {target: x86_64-apple-darwin, os: macos-latest, cross: false}

    name: Build ${{matrix.target}}
    runs-on: ${{ matrix.os }}
    env:
      CARGO: cargo
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          repository: ${{env.upstream}}

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install Cross
        if: matrix.cross
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall -y cross
          echo "CARGO=cross" >> $GITHUB_ENV

      - name: Set profile.release.strip = true
        shell: bash
        run: |
          mkdir -p $HOME/.cargo
          cat >> $HOME/.cargo/config.toml <<EOF
          [profile.release]
          strip = true
          EOF

      - name: Build release binary
        run: |-
          ${{ env.CARGO }} build --release --locked --target ${{ matrix.target }}

      - name: Set full and short ref
        env:
          FULL_REF: ${{ needs.filter.outputs.remote_ref }}
        run: |
          echo "short_ref=${FULL_REF:0:7}" >> $GITHUB_ENV
          echo "full_ref=$FULL_REF" >> $GITHUB_ENV

      - name: Upload ${{matrix.target}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          mv "target/${{ matrix.target }}/release/${{env.name}}" ./${{env.name}}
          tar -cJf "${{env.name}}-${{matrix.target}}.tar.xz" ${{env.name}}
          gh release create "${{env.name}}" --prerelease --notes "Nightly build" --title "nightly" --repo "${{github.repository}}" || true
          gh release edit "${{env.name}}" --prerelease --notes "Nightly build ${{env.name}} based on https://github.com/${{env.upstream}}/tree/${{env.full_ref}}" --title "${{env.name}}" --repo "${{github.repository}}" || true
          gh release delete-asset "${{env.name}}" "${{env.name}}-${{matrix.target}}.tar.xz" --yes --repo "${{github.repository}}" || true
          gh release upload "${{env.name}}" "./${{env.name}}-${{matrix.target}}.tar.xz" --repo "${{github.repository}}"
          gh release create "${{env.name}}-${{env.short_ref}}" --prerelease --notes "Nightly build" --title "nightly" --repo "${{github.repository}}" || true
          gh release edit "${{env.name}}-${{env.short_ref}}" --prerelease --notes "Nightly build ${{env.name}} based on https://github.com/${{env.upstream}}/tree/${{env.full_ref}}" --title "${{env.name}}-${{env.short_ref}}" --repo "${{github.repository}}" || true
          gh release delete-asset "${{env.name}}-${{env.short_ref}}" "${{env.name}}-${{matrix.target}}.tar.xz" --yes --repo "${{github.repository}}" || true
          gh release upload "${{env.name}}-${{env.short_ref}}" "./${{env.name}}-${{matrix.target}}.tar.xz" --repo "${{github.repository}}"

  manifest:
    runs-on: ubuntu-latest
    needs: [filter, build]
    name: push manifest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@main
        with:
          ref: manifest

      - name: update manifest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REMOTE_REF: ${{ needs.filter.outputs.remote_ref }}
        run: |-
          jq '.tree_sitter' = "${{ needs.filter.outputs.remote_ref }}"' manifest.json > temp.json
          mv -fv temp.json manifest.json
          cat manifest.json
          git config --global user.name ${{github.actor}}
          git config --global user.email 23291546+zydou@users.noreply.github.com
          git config pull.rebase false
          git add manifest.json
          git commit -m "chore: update ${{env.name}} to ${REMOTE_REF:0:7}"
          git push --force
