---
name: rust nightly
run-name: ${{github.workflow}}

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - .github/workflows/nightly-rust-builder.yml
  schedule:
    - cron: 45 23 * * *

permissions: write-all
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  filter:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        name: [atuin, bandwhich, bat, broot, diskonaut, dua, fd, gitui, gping, hoard, igrep, joshuto, macchina, onefetch, repgrep, ripgrep, skim, stylua, tailspin, tealdeer, tickrs, tokei, tree-sitter, viu, xplr]
    name: ${{ matrix.name }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@main
      - name: create manifest branch if not exist
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          if ! gh api /repos/${{github.repository}}/branches/manifest > /dev/null 2>&1; then
          git config --global user.name zydou
          git config --global user.email 23291546+zydou@users.noreply.github.com
          git checkout --orphan manifest
          git rm -rf .
          echo "{}" > manifest.json
          git add manifest.json
          git commit --allow-empty -m "chore: create manifest"
          git push origin manifest
          git checkout main
          fi

      - uses: actions/checkout@main
        with:
          ref: manifest
          path: manifest

      - name: check if we need to trigger a build
        id: check
        env:
          NAME: ${{matrix.name}}
        run: |
          KEY_NAME="${NAME//-/_}"  # replace - with _
          UPSTREAM=$(jq -r ".$KEY_NAME.upstream" build.json)
          REMOTE_REF=$(git ls-remote "https://github.com/$UPSTREAM.git" HEAD | awk '{ print $1}')
          OLD_REF=$(jq -r ".$KEY_NAME" manifest/manifest.json)
          if [ "$REMOTE_REF" != "$OLD_REF" ]; then
          echo "trigger=true" >> "$GITHUB_OUTPUT"
          else
          echo "trigger=false" >> "$GITHUB_OUTPUT"
          fi
          echo "remote_ref=$REMOTE_REF" >> "$GITHUB_OUTPUT"

      - name: build ${{ matrix.name }}
        if: steps.check.outputs.trigger == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          NAME: ${{ matrix.name }}
          REPO: ${{ github.repository }}
          REMOTE_REF: ${{ steps.check.outputs.remote_ref }}
        run: |
          bash rust-builder.sh

      # checkout manifest self again, because the previous manifest maybe freshed by other builds
      - uses: actions/checkout@main
        if: steps.check.outputs.trigger == 'true'
        with:
          ref: manifest
          path: manifest-new

      - name: update manifest
        if: steps.check.outputs.trigger == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          NAME: ${{ matrix.name }}
          REMOTE_REF: ${{ steps.check.outputs.remote_ref }}
        run: |
          KEY_NAME="${NAME//-/_}"  # replace - with _
          cd manifest-new
          jq ".$KEY_NAME = \"${{ steps.check.outputs.remote_ref }}\"" manifest.json > temp.json && mv -fv temp.json manifest.json
          cat manifest.json
          git config --global user.name zydou
          git config --global user.email 23291546+zydou@users.noreply.github.com
          git config pull.rebase false
          git add manifest.json
          git commit -m "chore: update $NAME to ${REMOTE_REF:0:7}" || export NO_UPDATES=true
          if [ "$NO_UPDATES" != "true" ]; then
          echo "push to manifest"
          git push --force
          fi
